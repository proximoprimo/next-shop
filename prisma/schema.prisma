// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String     @id @default(uuid())
  email       String     @unique
  confirmCode String?
  name        String?
  gender      Gender?
  birthday    DateTime?
  role        Role       @default(USER)
  favorite    Favorite[]
}

model Product {
  id          String     @id @default(uuid())
  name        String
  description String
  price       Float
  images      File[]
  cartItem    CartItem[]
  favorite    Favorite[]
  category    Category?   @relation(fields: [categoryId], references: [id])
  categoryId  Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CartItem {
  id        String  @id @default(uuid())
  quantity  Int
  product   Product @relation(fields: [productId], references: [id])
  productId String
}

model File {
  id        String    @id @default(uuid())
  url       String
  name      String
  width     Int
  height    Int
  mimeType  String
  size      Int
  product   Product?  @relation(fields: [productId], references: [id])
  productId String?
  category  Category?

  createdAt DateTime @default(now())
}

model Favorite {
  id        String  @id @default(uuid())
  user      User    @relation(fields: [userId], references: [id])
  userId    String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String

  createdAt DateTime @default(now())
}

model Category {
  id              Int        @id @default(autoincrement())
  name            String
  image           File       @relation(fields: [fileId], references: [id])
  products        Product[]
  fileId          String     @unique
  childCategories Category[] @relation(name: "CategoryToCategory")
  category        Category?  @relation(name: "CategoryToCategory", fields: [categoryId], references: [id])
  categoryId      Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum FileType {
  IMAGE
  VIDEO
}

enum Role {
  USER
  ADMIN
}

enum Gender {
  MALE
  FEMALE
}
